#!/bin/bash

set -euo pipefail

main() {
    get_directory_of_this_app
    source_environment_variables
    source_app_config_if_exists
    source_utility_functions
    create_symlink_to_this_app
    create_log_dir_if_not_exists
    clean_up_log_files
    parse_arguments "$@"
}

get_directory_of_this_app() {
    APP_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
}

source_environment_variables() {
    source "$APP_DIR/env"
}

source_app_config_if_exists() {
    [ -r "$APP_CONFIG_FILE" ] && source "$APP_CONFIG_FILE"
}

source_utility_functions() {
    for file in "$APP_UTILS_DIR"/*; do
        [[ -r "$file" ]] && source "$file"
    done
}

create_symlink_to_this_app() {
    ln -sf "$APP_DIR"/run "$HOME/.local/bin/$APP_NAME_LOWER"
}

create_log_dir_if_not_exists() {
    mkdir -p "$APP_LOG_DIR"
}

clean_up_log_files() {
    util_clean_up_log_files
}

parse_arguments() {
    if [[ $# -eq 0 ]]; then
        show_usage
        exit 0
    else
        case "$1" in
            -h|--help)
                show_usage
                exit 0
                ;;
            -i|--install)
                source "$APP_SETUP_DIR/install.sh" "$@"
                ;;
            -u|--update)
                source "$APP_SETUP_DIR/update.sh" "$@"
                ;;
            -x|--exec)
                source "$APP_SCRIPTS_DIR/exec.sh" "$@"
                ;;
            *)
                echo "Error: Invalid option '$1'"
                show_usage
                exit 1
                ;;
        esac
    fi
}

show_usage() {
    echo "Usage: $APP_NAME_LOWER [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -h, --help          Show help"
    echo "  -i, --install       Install packages and configuration"
    echo "  -u, --update        Update specific configuration or all"
    echo "  -x, --exec          Execute script"
}

# Call main function with arguments
main "$@"
